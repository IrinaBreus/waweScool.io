:root {
  --black: #000000;
  --white: #FFFFFF;
  --main: #242121;
  --second: #00b2a0;
  --bg: #f8f8f8;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Roboto Condensed",sans-serif;
}

ul[class],
li[class] {
  list-style: none;
  padding: 0;
  margin: 0;
}

a {
  text-decoration: none;
}

img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

.container {
  max-width: 1140px;
  margin: 0 auto;
}

.txt_main {
  font: normal 300 14px/129% "Roboto Condensed",sans-serif;
  font-display: swap;
  letter-spacing: .04em;
  color: var(--main);
}

.title {
  font: 600 48px "Raleway",sans-serif;
  letter-spacing: .01em;
  color: #01353e;
  text-align: center;
  position: relative;
}

.title::after {
  content: "/";
  font-weight: 600;
  font-size: 72px;
  color: var(--second);
  position: absolute;
  bottom: -50%;
}

.about {
  padding: 190px 0 200px;
}

.about__title {
  margin-bottom: 96px;
}

.about__title_tablet,
.about__title_mobile {
  display: none;
}

.about__text-block {
  display: grid;
  grid-template: repeat(4, -webkit-max-content)/repeat(2, 1fr);
  grid-template: repeat(4, max-content)/repeat(2, 1fr);
  gap: 30px 120px;
}

.feauters {
  background: var(--bg);
  padding: 200px 0;
}

.feauters__title {
  margin-bottom: 100px;
}

.feauters__info {
  display: flex;
  justify-content: space-between;
  gap: 30px;
  margin-bottom: 100px;
  flex-wrap: wrap;
}

.feauters__item {
  width: 350px;
  display: grid;
  grid-template-rows: repeat(2, -webkit-max-content);
  grid-template-rows: repeat(2, max-content);
  gap: 10px;
}

.feauters__caption {
  width: 100%;
  font-weight: 400;
  font-size: 24px;
  line-height: 117%;
  letter-spacing: .03em;
  color: var(--main);
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
}

.feauters__caption::before {
  content: "";
  display: block;
  width: 50px;
  height: 50px;
  margin-right: 10px;
}

.feauters__caption_life::before {
  width: 55px;
  background: url(../icons/feauters/life.svg) center center/contain no-repeat;
}

.feauters__caption_leave::before {
  background: url(../icons/feauters/leave.svg) center center/contain no-repeat;
}

.feauters__caption_learn::before {
  background: url(../icons/feauters/learn.svg) center center/contain no-repeat;
}

.feauters__inner {
  display: grid;
  grid-template-columns: 3fr 2fr 5fr;
  align-items: center;
}

.feauters__stat {
  grid-column: 1/2;
  width: 100%;
  min-height: 100%;
  font-weight: 300;
  font-size: 14px;
  line-height: 129%;
  letter-spacing: .04em;
  color: var(--main);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.feauters__graph {
  width: 100%;
}

.feauters__graph span {
  display: flex;
  font-weight: 400;
  font-size: 24px;
  font-weight: 400;
  text-align: right;
}

.feauters__graph span::before {
  content: "";
  background: url(../../icons/feauters/waves.svg) bottom center/contain no-repeat;
  width: 100%;
  display: inline-block;
  margin-right: 10px;
}

.feauters__text {
  grid-column: 3/4;
  display: grid;
  grid-template-rows: repeat(2, -webkit-max-content);
  grid-template-rows: repeat(2, max-content);
  gap: 30px;
}

.header {
  min-height: 100vh;
  background: url("../img/header_bg.jpg") center center/cover no-repeat;
  padding-top: 25px;
}

.header__nav {
  display: grid;
  grid-template-columns: -webkit-max-content 1fr 8fr 2fr;
  grid-template-columns: max-content 1fr 8fr 2fr;
  gap: 20px;
  align-items: center;
  height: 63px;
}

.header__logo {
  grid-column: 1/2;
  width: 60px;
}

.header__logo img {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
  object-fit: contain;
}

.header__menu {
  grid-column: 3/4;
  display: flex;
  justify-content: space-between;
}

.header__menu li {
  border-bottom: 2px solid rgba(0,0,0,0);
  padding-bottom: 4px;
}

.header__menu li:hover {
  border-bottom: 2px solid var(--second);
}

.header__menu li a {
  font-weight: 400;
  font-size: 24px;
  letter-spacing: .03em;
  color: var(--white);
}

.header__main {
  min-height: calc(100vh - 88px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}

.header__title {
  font: 700 200px "Raleway";
  letter-spacing: 0;
  color: var(--main);
  text-transform: uppercase;
  margin-top: auto;
}

.header__subtitle {
  font: 400 24px "Roboto Condensed";
  letter-spacing: .03em;
  color: #000;
  margin-bottom: auto;
}

.header__buble {
  width: 20px;
  height: 69px;
  margin-bottom: 94px;
  animation: moveDown 2s ease-in-out infinite alternate-reverse;
}

.header__buble img {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
  object-fit: contain;
}

@-webkit-keyframes moveDown {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    -webkit-transform: translateY(10px);
    transform: translateY(10px);
  }
}

@keyframes moveDown {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    -webkit-transform: translateY(10px);
    transform: translateY(10px);
  }
}

@supports (-webkit-appearance:none) {
  .feauters__caption_life::before {
    background: url(../icons/feauters/life.svg) center center/contain no-repeat;
  }

  .feauters__caption_leave::before {
    background: url(../icons/feauters/leave.svg) center center/contain no-repeat;
  }

  .feauters__caption_learn::before {
    background: url(../icons/feauters/learn.svg) center center/contain no-repeat;
  }

  .feauters__graph span::before {
    background: url(../../icons/feauters/waves.svg) bottom center/contain no-repeat;
  }

  .header {
    background: url("../img/header_bg.webp") center center/cover no-repeat;
  }
}

@media (max-width: 1200px) {
  .container {
    max-width: 960px;
  }

  .title {
    font-size: 44px;
  }

  .title::after {
    font-size: 66px;
  }

  .about__title {
    margin-bottom: 90px;
  }

  .about__text-block {
    gap: 30px 80px;
  }

  .feauters {
    padding: 180px 0;
  }

  .feauters__item {
    width: 300px;
  }

  .feauters__inner {
    grid-template-columns: 3fr 1fr 5fr;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 992px) {
  .container {
    max-width: 720px;
  }

  .title {
    font-size: 38px;
  }

  .title::after {
    font-size: 52px;
  }

  .about {
    padding: 150px 0 160px;
  }

  .about__title {
    margin-bottom: 70px;
  }

  .about__text-block {
    gap: 30px 40px;
  }

  .feauters {
    padding: 160px 0;
  }

  .feauters__title {
    margin-bottom: 80px;
  }

  .feauters__info {
    display: flex;
    justify-content: space-between;
    gap: 30px;
    margin-bottom: 80px;
    flex-wrap: wrap;
  }

  .feauters__item {
    width: 220px;
  }

  .feauters__caption {
    font-size: 20px;
  }

  .feauters__caption::before {
    content: "";
    display: block;
    width: 45px;
    height: 45px;
    margin-right: 10px;
  }

  .feauters__caption_life::before {
    width: 50px;
  }

  .feauters__inner {
    grid-template-columns: 3fr 5fr;
    gap: 60px;
  }

  .feauters__graph {
    width: 100%;
  }

  .feauters__graph span {
    font-size: 20px;
  }

  .feauters__text {
    grid-column: 2/3;
  }

  .header__nav {
    grid-template-columns: -webkit-max-content 1fr 8fr;
    grid-template-columns: max-content 1fr 8fr;
    gap: 10px;
  }

  .header__menu li a {
    font-size: 20px;
  }

  .header__title {
    font-size: 160px;
  }

  .header__subtitle {
    font-size: 22px;
  }

  .header__buble {
    width: 16px;
    height: 49px;
    margin-bottom: 64px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 768px) {
  .container {
    max-width: 540px;
  }

  .title {
    font-size: 32px;
  }

  .title::after {
    font-size: 46px;
    bottom: -25%;
  }

  .about {
    padding: 100px 0 120px;
  }

  .about__title {
    margin-bottom: 46px;
  }

  .about__title_tablet {
    display: block;
  }

  .about__title_desktop,
  .about__title_mobile {
    display: none;
  }

  .about__text-block {
    display: grid;
    grid-template: repeat(8, -webkit-max-content)/1fr;
    grid-template: repeat(8, max-content)/1fr;
    gap: 30px;
  }

  .about__txt_2 {
    grid-row: 5/6;
  }

  .about__txt_4 {
    grid-row: 6/7;
  }

  .about__txt_6 {
    grid-row: 7/8;
  }

  .about__txt_8 {
    grid-row: 8/9;
  }

  .feauters {
    padding: 140px 0;
  }

  .feauters__title {
    margin-bottom: 80px;
  }

  .feauters__info {
    justify-content: space-evenly;
  }

  .feauters__item {
    width: 240px;
  }

  .feauters__inner {
    gap: 40px;
  }

  .header__nav {
    grid-template-columns: -webkit-max-content 1fr;
    grid-template-columns: max-content 1fr;
    gap: 40px;
  }

  .header__menu {
    grid-column: 2/3;
  }

  .header__menu li a {
    font-size: 16px;
  }

  .header__title {
    font-size: 120px;
  }

  .header__subtitle {
    font-size: 20px;
  }

  .header__buble {
    width: 12px;
    height: 36px;
    margin-bottom: 64px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 576px) {
  .container {
    max-width: 100%;
    padding: 0 5%;
  }

  .title {
    font-size: 30px;
  }

  .title::after {
    font-size: 42px;
    bottom: -20%;
  }

  .about {
    padding: 80px 0 100px;
  }

  .about__title {
    margin-bottom: 46px;
  }

  .feauters {
    padding: 100px 0;
  }

  .feauters__title {
    margin-bottom: 60px;
  }

  .feauters__info {
    justify-content: center;
    margin-bottom: 60px;
  }

  .feauters__item {
    width: 300px;
  }

  .feauters__inner {
    grid-template-columns: 1fr;
    gap: 20px;
  }

  .feauters__graph {
    max-width: 320px;
    margin-bottom: 20px;
  }

  .feauters__text {
    grid-column: 1/2;
  }

  .header__nav {
    gap: 20px;
  }

  .header__menu {
    flex-wrap: wrap;
    justify-content: space-around;
  }

  .header__menu li a {
    font-size: 18px;
    margin: 0 5px;
  }

  .header__title {
    font-size: 80px;
  }

  .header__subtitle {
    font-size: 24px;
    text-align: center;
  }

  .header__buble {
    width: 12px;
    height: 36px;
    margin-bottom: 64px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 420px) {
  .about__title_mobile {
    display: block;
  }

  .about__title_desktop,
  .about__title_tablet {
    display: none;
  }

@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */